# For more information look at "README.md".

# GLOBAL SITE SETTINGS
# Parameters used by HUGO to configure the site's global settings.
preserveTaxonomyNames = "true"

baseURL = "https://example.org/"
languageCode = "en-us"
title = "HUGO MyPortfolio Theme"
theme = "hugo-myportfolio-theme"

[markup.goldmark.renderer]
unsafe= true

[params]

    # GENERAL SITE PARAMETERS
    # Parameters used by the site at the global level.

    # File(s) containing overriden CSS variables (can have more than 1) (OPTIONAL)
    custom_css_vars = [ "custom_vars.css" ]

    # File(s) containing overriden CSS - NOT variables (can have more than 1) (OPTIONAL)
    custom_css = [ "custom.css" ]

    # ----------

    # SITE METADATA
    # Parameters used to configure metadata in the HTML "head" section.

    [params.meta]
        # To provide some metadata for search engines (OPTIONAL)
        author = "<AUTHOR>"
        description = "<DESCRIPTION>"

        # The path must be relative to the static folder (MANDATORY)
        favicon = "favicon.ico"

    # ----------

    # SITE FONTS

    # Fonts definition.

    [params.fonts]

        # List of fonts used in the site's CSS.
        # Defined fonts can be used as usual through their name provided for "family" (a "font-face" is defined for each).
        # Additionally, the defined fonts are also available via CSS variables named "--GENERAL-FONT-X" where "X" is the font's index in the list (starting from 1).
        # To use a font in CSS, simply set the "font-family" of the element, for example:
        #     font-family: var(--GENERAL-FONT-1);
        #
        # By default, the theme uses 3 fonts, accessible via "--GENERAL-FONT-1", "--GENERAL-FONT-2" and "--GENERAL-FONT-3".
        # - If no fonts are defined, all three variables default to: "Arial", sans-serif.
        # - If at least 1 font is defined, the first one in the list will be used as the fallback for any undefined font.
        # More than 3 fonts can be defined, and used in CSS through the custom files (defined by "custom_css_vars" and "custom_css").

        # Font parameters:
        # => See "font-face" documentation for more details:
        #    https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face
        # - family: Equivalent to "font-family" (eg: "Inter").
        # - style: Equivalent to "font-style" (optional, default: "normal")
        # - src: "system", "local" or "url".
        # - file: If using "url", file name in "static/fonts" (e.g.: "Inter-Regular.woff2").
        # - format: If using "url", font format (e.g.: "woff2").
        # - name: If using "local", name of the installed font (optional, default: value of "family").
        # - serif: = "serif" or "sans-serif" (optional, default: "sans-serif").

        #definitions = [
        #    { family = "Arial", src = "system" }
        #]

    # ----------

    # HOMEPAGE
    # Define the sections and the order in which they appear (MANDATORY)
    # "home" will always be first, regardless of its position (if in the list).
    [params.homepage]
        sections = [ "home", "about", "services", "skills", "projects", "contact" ]

    # ----------

    # NAVIGATION MENU
    # Define the navigation bar entries and the order in which they appear (OPTIONAL)
    [params.navigation]

        # Brand (OPTIONAL - but required if want HOME button)
        brand = "YOUR BRAND"
        #brand_logo = "images/brand_logo.png"

        # NAVIGATION MENU ENTRIES (OPTIONAL)
        # Add an entry for each section to add in the navigation menu.
        # Syntax:
        #    key = "<VALUE>"
        #    => Where
        #        - "key" is in:
        #            - about
        #            - services
        #            - skills
        #            - projects (! - SPECIAL CASE: DIFFERENT MANAGEMENT THAN OTHER SECTIONS!)
        #            - contact
        #
        #        - "<VALUE>" is the string to display as menu item.
        # If no entry is specified => No navigation menu is created.
        #    (even if "params.navigation.links" is defined, but empty)
        # => Can define a dummy variable in "links" to force the creation of the menu (e.g.: dummy = 1). (TODO: ?)
        # To change order, need to change code in navigation menu creation.
        # Special case: "projects".
        #    projects = [ { section = "<SECTION_DIRECTORY>", label = "<VALUE>" }, ... ]
        # ! - Values for "sections" in "projects" must be the same as used in "projects.params".
        # (& must correspond to the section directories)
        [params.navigation.links]
            about    = "ABOUT"
            services = "SERVICES"
            skills   = "SKILLS"
            # Order is not defined here, but in "categories" of the "projects" section
            projects = [
                { section = "pro", label = "PROFESSIONAL" },
                { section = "perso", label = "PERSONAL" }
            ]
            contact  = "CONTACT"

    # ----------

    # HOME section
    [params.home]
        # Settings related to the CSS can be set in 'static\css\custom.css', 'home' section
        #width = 50                        # 0-100 (percentage) (default: 50)
        #offset_h = 50                     # 0-100 (percentage) (default: 50)
        #offset_v = 50                     # 0-100 (percentage) (default: 50)
        #text_align = "center"             # left|center|right (default: center)

    # ----------

    # ABOUT section
    [params.about]
        # Settings related to the CSS can be set in 'static\css\custom.css', 'about' section
        # * title_align: Alignment of title ("left"|"center"|"right", default: "center")
        # * title_length: Number of column taken by title (1-12, default: 10)
        # * layout: Style of page layout ("classic"|"left"|"right", default: "classic")
        #   * "classic":
        #     Inputs:
        #       * main_side: Right part, containing "main" text (1-12, default: 7)
        #       * extra_side: Left part, containing "profile" text (1-12, default: 3)
        #       * offset_left: Offset on left of table (0-10, default: half (int) of the remaining space)
        #       * offset_right: Offset on right of table (0-10, default: other half of remaining space)
        #       => The sum of the 4 must be smaller or equal to 12.
        #     Computed:
        #       * offset_center: Offset between the 2 parts => Remainder of the 12 columns (default: 0, or remaining space of offsets are specified)
        #   * "left":
        #     Inputs:
        #       * main_side: Left part, containing both "profile" and "main" texts (default: 7)
        #       * extra_side: Offset on right of table (default: 3)
        #       => The sum of the 2 must be smaller or equal to 12.
        #     Computed:
        #       * offset_left: Offset on left of table => Remainder of the 12 columns.
        #   * "right":
        #     Inputs:
        #       * main_side: Right part, containing both "profile" and "main" texts (default: 7)
        #       * extra_side: Offset on left of table (default: 3)
        #       => The sum of the 2 must be smaller or equal to 12.
        # * portrait_percentage: Percentage taken by image inside its allocated space (1-100, default: 100)
        # * portrait_cancel_bottom_margin: If 1, remove the margin below the portrait image (0|1, default: 0)
        # Additional settings only if layout "left"|"right":
        # * portrait_width: Number of columns taken by the portrait image (1-12, default: 4)
        # * background: If "full", takes whole screen instead of only "extra" side ("full", default: none)
        #title_align = "center"
        #title_length = 10
        #layout = "classic"
        #main_side = 7
        #extra_side = 3
        #offset_left = 1
        #offset_right = 1
        #portrait_percentage = 100
        #portrait_cancel_bottom_margin = 0
        # only if layout "left"|"right":
        #portrait_width = 4
        #background = ""

    # ----------

    # SERVICES section
    [params.services]
        # Settings related to the CSS can be set in 'static\css\custom.css', 'services' section
        #title_align = "right"            # left|center|right (default: center)
        title_length = 4                  # 1-12 (default: 10)
        # Number of "skill boxes" per row.
        # The used grid system is based on 12 columns, so all values will not provide good results.
        # Only values that are divisors of 12 should be used, and others avoided.
        # - "Good" values are 1, 2, 3, 4, 6, 12
        # - "Bad" values are 5, 7, 8, 9, 10 and 11
        # If the last row isn't full, the boxes will be centered if possible.
        # Again, for good results, the number of boxes on the last row should also be a divisor of 12.
        # Additionally, if the number of columns is too high (and thus boxes are tight),
        #  the content might not fit and cause layout issues.
        #nb_columns = 4         # (default: 4)
        #nb_columns_small = 2   # (default: 2)
        #nb_columns_xsmall = 1  # (default: 1)

    # ----------

    # SKILLS section
    [params.skills]
        # Settings related to the CSS can be set in 'static\css\custom.css', 'skills' section
        #title_align = "right"            # left|center|right (default: center)
        title_length = 4                  # 1-12 (default: 10)

    # ----------

    # CONTACT section
    [params.contact]
        # Settings related to the CSS can be set in 'static\css\custom.css', 'contact' section
        title_align = "right"             # left|center|right (default: center)
        title_length = 4                  # 1-12 (default: 10)

    # ----------

    # PROJECTS section
    [params.projects]
        # Values in "categories" must be the same as in navigation menu "projects".
        # (& must correspond to the section directories)
        categories = [ "pro", "perso" ]

        title_align = "left"             # left|center|right (default: center)
        title_length = 8                  # 1-12 (default: 10)

        # Grid align / max number of projects
        #TODO: keep here or move to 'params.projects.home'?
        #TODO: would be better specific to each category
        #max_projects = 12
        #fit_rows = true

        # Post orders:
        # - list of posts:
        #    - default: date.
        #    - common to all, defined globally here.
        #    - can be overriden at page level (in "_index.md").
        # - list of brothers:
        #    - default: from parent (if no parent => title).
        #        - list: parent.sections_order
        #        - single: parent.posts_order
        # - list of sections:
        #    - default: title.
        #    - common to all, defined globally here.
        #    - can be overriden at page level
        #        - list: in "_index.md"
        #        - single: in "index.md" (or "post.md" if post is not a bundle)
        # Required as default values.
        sections_order = "title"
        sections_order_reverse = false
        posts_order = "date"
        posts_order_reverse = true

        # Format of the "period" field.
        date_format = "01/2006"
        period_format = "{start} - {end}"
        period_format_startonly = "{start} - Present"

        # Number of columns in projects grid,
        # respectively on 'home' page and in projects 'list' page (OPTIONAL)
        # (accepted values: 1, 2, 3, 4, 6, 12 - must be a multiple of 12)
        [params.projects.home]
            #nb_columns = 6         # (default: 6)
            #nb_columns_small = 4   # (default: 4)
            #nb_columns_xsmall = 2  # (default: 2)
        [params.projects.list]
            nb_columns = 4         # (default: 6)
            nb_columns_small = 3   # (default: 4)
            nb_columns_xsmall = 2  # (default: 2)

    # ----------

    # PAGE 404
    [params.page404]
        text = "OOPS, PAGE NOT FOUND!"
        background_image = "404.jpg"
        button_text = "BACK HOME"
